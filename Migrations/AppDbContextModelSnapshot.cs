// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using toDoList;

namespace toDoList.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("toDoClassLibrary.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserPass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            UserEmail = "mary@gmail.com",
                            UserName = "Mary",
                            UserPass = "maryPass",
                            UserRole = 1
                        },
                        new
                        {
                            UserID = 2,
                            UserEmail = "Karl@gmail.com",
                            UserName = "Karl",
                            UserPass = "karlPass",
                            UserRole = 2
                        },
                        new
                        {
                            UserID = 3,
                            UserEmail = "Eric@gmail.com",
                            UserName = "Eric",
                            UserPass = "ericPass",
                            UserRole = 2
                        },
                        new
                        {
                            UserID = 4,
                            UserEmail = "Jorge@gmail.com",
                            UserName = "Jorge",
                            UserPass = "jorgePass",
                            UserRole = 0
                        },
                        new
                        {
                            UserID = 5,
                            UserEmail = "Ann@gmail.com",
                            UserName = "Ann",
                            UserPass = "annPass",
                            UserRole = 3
                        },
                        new
                        {
                            UserID = 6,
                            UserEmail = "Annette@gmail.com",
                            UserName = "Annette",
                            UserPass = "annPass",
                            UserRole = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
